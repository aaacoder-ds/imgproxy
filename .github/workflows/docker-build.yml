name: Build and Push Multi-Arch Docker Image and Packages

on:
  push:
    branches: [ master, main ]
    tags: [ 'v*' ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-packages:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image for packages
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: false
          tags: imgproxy:package-build
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create packages directory
        run: mkdir -p packages

      - name: Build DEB package
        run: |
          docker run --rm -v $(pwd)/packages:/packages imgproxy:package-build \
            /usr/local/bin/imgproxy-build-package deb /packages

      - name: Build RPM package
        run: |
          docker run --rm -v $(pwd)/packages:/packages imgproxy:package-build \
            /usr/local/bin/imgproxy-build-package rpm /packages

      - name: Build TAR package
        run: |
          docker run --rm -v $(pwd)/packages:/packages imgproxy:package-build \
            /usr/local/bin/imgproxy-build-package tar /packages

      - name: Upload packages as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: imgproxy-packages
          path: packages/
          retention-days: 30